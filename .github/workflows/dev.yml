name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: demo.settings
      DEBUG: false
      DATABASE_NAME: db.sqlite3
      DJANGO_SECRET_KEY: dummy-for-ci
      ALLOWED_HOSTS: localhost,127.0.0.1

    steps:
    - name: Code Checkout
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Create .env file
      run: |
        cat <<EOF > devsu-demo-devops-python/.env
        DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
        DATABASE_NAME=db.sqlite3
        DEBUG=${{ secrets.DEBUG }}
        ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
        EOF

    - name: Install Dependencies
      run: |
        pip install -r devsu-demo-devops-python/requirements.txt
        pip install flake8 coverage

    - name: Run Migrations & Tests
      working-directory: devsu-demo-devops-python
      run: |
        python manage.py migrate
        # Ejecuta los tests y recoge cobertura
        coverage run --source='.' manage.py test api
        coverage xml -o coverage.xml

    - name: Lint with flake8
      run: flake8 devsu-demo-devops-python/

    - name: Coverage Report
      working-directory: devsu-demo-devops-python
      run: coverage report -i

    - name: Build & Push Docker Image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t devsu-app .
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
        IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/devsu-app:latest
        docker tag devsu-app $IMAGE
        docker push $IMAGE

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectBaseDir: devsu-demo-devops-python
        args: >
          -Dsonar.organization=pablofloress2615
          -Dsonar.projectKey=PabloFloress2615_devsu-devops
          -Dsonar.python.coverage.reportPaths=coverage.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}